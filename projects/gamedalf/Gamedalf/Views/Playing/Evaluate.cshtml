@model EvaluationViewModel

@{
    ViewBag.Title = "Evaluate " + Model.GameTitle;
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<h1>@Model.PlayerEmail, tell us a little about your experience with @Model.GameTitle!</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(m => m.GameTitle)
    @Html.HiddenFor(m => m.PlayerEmail)

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Review, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Review, 10, 10, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Review, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="btn-group" data-toggle="buttons">
                    <label class="btn btn-default">@Html.RadioButtonFor(m => m.Score, 1) 1</label>
                    <label class="btn btn-default">@Html.RadioButtonFor(m => m.Score, 2) 2</label>
                    <label class="btn btn-default">@Html.RadioButtonFor(m => m.Score, 3) 3</label>
                    <label class="btn btn-default">@Html.RadioButtonFor(m => m.Score, 4) 4</label>
                    <label class="btn btn-default">@Html.RadioButtonFor(m => m.Score, 5) 5</label>
                </div>

                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    
    @Html.Partial("_Confirm", "Publish")
}

